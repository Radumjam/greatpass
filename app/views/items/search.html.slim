- content_for(:title) do
  - if @search_params[:platform_username] 
    = @search_params[:platform_username]
end

- if !@platform_user
  .row
    .col-xs-12
      p 
        | Great Pass helps you find 
        = link_to 'Rocket League', 'http://www.rocketleaguegame.com/', target: '_blank' 
        |  items available via in-game Player-to-Player trading.
        br
        | Contact the owner on their platform to discuss a trade.

.row
  .col-xs-12
    - if @platform_user
      #platform-user-header
        h4
          i class="icon #{platform_ion_class(@platform_user.platform)}"
          | &nbsp;
          = @platform_user.platform_username
          |  - Inventory
        p
          | You can search through the player's inventory below.
          br
            = "Contact #{@platform_user.platform_username} on #{@platform_user.platform} to discuss potential trades."
    - else
      h4 Search
    .panel.panel-default
      
      = bootstrap_form_tag url: search_path, html: { method: 'get', autocomplete: 'off' } do |f|
        .panel-body
          .col-sm-4
            = f.select :item_id, 
              options_for_select(Item.all.collect { |i| [ i.name, i.id ] }, @search_params[:item_id]), 
              { include_blank: 'All' }, { multiple: true, namespace: 'search' }
          .col-sm-4
            = f.select :kind,
              options_for_select(Item.kinds.sort.map { |k, v| [k.titleize, v] }, @search_params[:kind]), 
              { include_blank: 'All' }, { multiple: true, namespace: 'search' }
          .col-sm-2
            = f.select :platform, options_for_select(User.platforms.sort, @search_params[:platform]), 
            { include_blank: 'All' }, { multiple: true, namespace: 'search' }
          .col-sm-2
            = f.text_field :platform_username, label: 'Gamertag', value: @search_params[:platform_username], placeholder: 'All'
          .clearfix.visible-sm
          .col-sm-6
            = f.select :certification, 
              options_for_select(UserItem.certifications.sort.map { |k,v| [k.capitalize, v] }, @search_params[:certification]), 
              { include_blank: 'All' }, { multiple: true, namespace: 'search' }
          .col-sm-6
            = f.select :paint_color, 
              options_for_select(UserItem.paint_colors.sort.map { |k, v| [k.titleize, v] }, @search_params[:paint_color]), 
              { include_blank: 'All' }, { multiple: true, namespace: 'search' }
          .clearfix.visible-sm
          .col-sm-12
            = f.button class: 'btn btn-success', id: 'search-submit-button' do
              span.glyphicon.glyphicon-search aria-hidden='true'
              |  Search
            end

.row
  .col-xs-12
    p 
      = page_entries_info @result_items, entry_name: 'result'

.row
  .col-xs-12
    .panel.panel-default
      .table-responsive
        table.table.table-striped
          thead
            tr 
              th Name
              th Certification
              th Paint Color
              th Platform / Gamertag
              th Type
              th Rarity
          tbody
            - @result_items.each do |i|
              tr class="#{i.user == current_user ? 'info': ''}"
                td = i.item.try(:name)
                td = i.certification.try(:capitalize)
                td = i.paint_color.try(:titleize)
                td
                  = link_to platform_user_path(platform_string: i.user.platform.downcase, platform_username: i.user.platform_username), class: 'user-platform-link' do
                    i class="icon #{platform_ion_class(i.user.platform)}"
                    | &nbsp;
                    = i.user.platform_username
                  end
                td = i.item.try(:kind).try(:titleize)
                td = i.item.try(:rarity).try(:titleize)

.row
  .col-xs-12
    = paginate @result_items, theme: 'twitter-bootstrap-3'
